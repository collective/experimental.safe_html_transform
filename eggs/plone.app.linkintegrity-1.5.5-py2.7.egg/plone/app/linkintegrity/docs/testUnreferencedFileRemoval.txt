This tests against #6666 and #7784, simple removal of a not referenced file,
which broke zeo-based installations.

We simply use a browser to try to delete a content item.  Before we can do
this we need to prevent the test framework from choking on the exception we
intentionally throw (see docs/testRemovalTriggersConfirmation.txt for more
info):

  >>> self.setRoles(('Manager',))
  >>> self.setStatusCode('LinkIntegrityNotificationException', 200)
  >>> browser = self.getBrowser(loggedIn=True)
  >>> browser.open('http://nohost/plone/doc1')
  >>> browser.getLink('Delete').click()

  >>> browser.contents
  '...Do you really want to delete this item?...'
  >>> browser.getControl('Delete').click()

The resulting page should confirm the removal:

  >>> browser.contents
  '...Test Page 1 has been deleted...'

  >>> portal.doc1
  Traceback (most recent call last):
  ...
  AttributeError: doc1

Unfortunately we cannot check whether the transaction was properly recorded
at this point.  While it does work as expected through-the-web, both with and
without ZEO, the test either shows a different transaction (for Plone 3.x) or
nothing at all (for Plone 4.0).  This is probably due to the way `DemoStorage`
handles undos, but in any case the test gets disabled for now...

..  >>> latest = portal.undoable_transactions()[0]
..  >>> latest['description'].endswith('Deleted http://nohost/plone/doc1')
..  True
