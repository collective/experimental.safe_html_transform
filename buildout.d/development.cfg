[buildout]
extends =
    base.cfg

eggs +=
    plone.reload
    Products.PDBDebugMode
    Products.DocFinderTab
    aws.zope2zcmldoc
    collective.profiler

extensions +=
    mr.developer

parts +=
    omelette
    test
    coverage
    test-coverage
    robot
    code-analysis
show-picked-versions = true


[omelette]
recipe = collective.recipe.omelette
eggs = ${test:eggs}


[test]
recipe = zc.recipe.testrunner
eggs =
    ${buildout:eggs}
    ${buildout:package-name} ${buildout:package-extras}
defaults = ['-s', '${buildout:package-name}', '--auto-color', '--auto-progress']


[coverage]
recipe = zc.recipe.egg
eggs = coverage


[test-coverage]
recipe = collective.recipe.template
input = inline:
    #!/bin/bash
    ${buildout:directory}/bin/coverage run --source=${buildout:directory}/src bin/test
    ${buildout:directory}/bin/coverage html
    ${buildout:directory}/bin/coverage report -m # --fail-under=100
    # Fail (exit status 1) if coverage returns exit status 2 (this happens
    # when test coverage is below 100%.
output = ${buildout:directory}/bin/test-coverage
mode = 755

[robot]
recipe = zc.recipe.egg
eggs =
    Pillow
    ${test:eggs}
    plone.app.robotframework[debug,ride,reload]


[code-analysis]
recipe = plone.recipe.codeanalysis
directory = ${buildout:directory}/src/
flake8-exclude = bootstrap.py,bootstrap-buildout.py,docs,*.egg.,omelette
flake8-max-complexity = 15

